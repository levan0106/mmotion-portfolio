name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set version
      id: version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        fi

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.version }}
        release_name: Release ${{ steps.version.outputs.version }}
        body: |
          ## 🚀 Release ${{ steps.version.outputs.version }}
          
          ### What's New
          - Portfolio management features
          - Real-time analytics
          - Modern web dashboard
          - Comprehensive testing framework
          
          ### Changes
          - See [CHANGELOG.md](./CHANGELOG.md) for detailed changes
          
          ### Installation
          ```bash
          # Clone the repository
          git clone https://github.com/${{ github.repository }}.git
          cd portfolio-management-system
          
          # Install dependencies
          npm install
          cd frontend && npm install
          
          # Start the application
          docker-compose up -d
          ```
          
          ### Docker Images
          - Backend: `ghcr.io/${{ github.repository }}-backend:${{ steps.version.outputs.version }}`
          - Frontend: `ghcr.io/${{ github.repository }}-frontend:${{ steps.version.outputs.version }}`
        draft: false
        prerelease: false

  build-release-assets:
    name: Build Release Assets
    runs-on: ubuntu-latest
    needs: create-release

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build backend
      run: npm run build

    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Build frontend
      working-directory: ./frontend
      run: npm run build

    - name: Create release archive
      run: |
        tar -czf portfolio-management-system-${{ steps.version.outputs.version }}.tar.gz \
          --exclude=node_modules \
          --exclude=.git \
          --exclude=coverage \
          --exclude=dist \
          --exclude=frontend/node_modules \
          --exclude=frontend/dist \
          .

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./portfolio-management-system-${{ steps.version.outputs.version }}.tar.gz
        asset_name: portfolio-management-system-${{ steps.version.outputs.version }}.tar.gz
        asset_content_type: application/gzip

  build-docker-images:
    name: Build Docker Images
    runs-on: ubuntu-latest
    needs: create-release

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract version
      id: version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        fi

    - name: Build and push backend image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.dev
        push: true
        tags: |
          ghcr.io/${{ github.repository }}-backend:${{ steps.version.outputs.version }}
          ghcr.io/${{ github.repository }}-backend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push frontend image
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        file: ./frontend/Dockerfile.dev
        push: true
        tags: |
          ghcr.io/${{ github.repository }}-frontend:${{ steps.version.outputs.version }}
          ghcr.io/${{ github.repository }}-frontend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

  notify-release:
    name: Notify Release
    runs-on: ubuntu-latest
    needs: [create-release, build-release-assets, build-docker-images]

    steps:
    - name: Notify release completion
      run: |
        echo "🎉 Release ${{ steps.version.outputs.version }} has been created successfully!"
        echo "📦 Release assets uploaded"
        echo "🐳 Docker images built and pushed"
        echo "🔗 Release URL: https://github.com/${{ github.repository }}/releases/tag/${{ steps.version.outputs.version }}"
