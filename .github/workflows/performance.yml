name: Performance Tests

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: portfolio_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Wait for services
      run: |
        npx wait-on tcp:5432 tcp:6379 --timeout 30000

    - name: Run database migrations
      run: npm run migration:run
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/portfolio_test
        REDIS_URL: redis://localhost:6379

    - name: Seed test data
      run: npm run seed:test
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/portfolio_test
        REDIS_URL: redis://localhost:6379

    - name: Start application
      run: |
        npm run start:dev &
        sleep 30
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/portfolio_test
        REDIS_URL: redis://localhost:6379
        PORT: 3000

    - name: Run API performance tests
      run: |
        # Install artillery for load testing
        npm install -g artillery
        
        # Create performance test configuration
        cat > artillery-config.yml << EOF
        config:
          target: 'http://localhost:3000'
          phases:
            - duration: 60
              arrivalRate: 10
              name: "Warm up"
            - duration: 120
              arrivalRate: 50
              name: "Ramp up load"
            - duration: 60
              arrivalRate: 100
              name: "Sustained load"
        scenarios:
          - name: "Portfolio API Performance"
            weight: 100
            flow:
              - get:
                  url: "/api/v1/portfolios"
                  expect:
                    - statusCode: 200
                    - hasHeader: "content-type"
              - get:
                  url: "/api/v1/portfolios/analytics"
                  expect:
                    - statusCode: 200
        EOF
        
        # Run performance tests
        artillery run artillery-config.yml --output performance-report.json
        
        # Generate HTML report
        artillery report performance-report.json --output performance-report.html

    - name: Run frontend performance tests
      run: |
        cd frontend
        npm ci
        npm run build
        
        # Install lighthouse for performance testing
        npm install -g lighthouse
        
        # Start frontend server
        npm run preview &
        sleep 10
        
        # Run lighthouse performance test
        lighthouse http://localhost:4173 --output html --output-path ./lighthouse-report.html --chrome-flags="--headless"

    - name: Upload performance reports
      uses: actions/upload-artifact@v3
      with:
        name: performance-reports
        path: |
          performance-report.html
          frontend/lighthouse-report.html

    - name: Generate performance summary
      run: |
        echo "## Performance Test Results" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… API performance tests completed" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Frontend performance tests completed" >> $GITHUB_STEP_SUMMARY
        echo "- ðŸ“Š Performance reports generated" >> $GITHUB_STEP_SUMMARY
